{"name":"Wadropzone","tagline":"Wakanda waDropzone Widget: Custom widget for files uploading","body":"## Custom Widget for [Wakanda](http://wakanda.org)\r\nThe __waDropzone__ widget is simple implementation of DropzoneJS library, for more details please see https://www.dropzonejs.com/. \r\n\r\n### Video Demo\r\nhttp://www.youtube.com/watch?v=ErjplSPF0MA\r\n\r\n### Properties\r\nThis __waDropzone__ widget has the following properties: \r\n\r\n* __Parall Uploads__: How many file uploads to process in parallel. (See the Enqueuing file uploads section for more info: https://www.dropzonejs.com/)\r\n* __Max File Size__: The max file size allowed (in MB).\r\n* __Upload Multiple__: Whether the widget should send multiple files in one request.\r\n* __Create Image Thumbnails__: Display thumbnails for images.\r\n* __Add Remove Links__: This will add a link to every file preview to remove or cancel (if already uploading).\r\n* __Max Files__: How many files the widget can handle.\r\n* __Auto Process__: if checked, it will process files automatically, if not, you should call the .processQueue() method to upload files.\r\n* __In Case of conflict__: Select an action in case if file already exists.\r\n* __Upload folder__: Path to the folder where to save the files.\r\n\r\n### Events:\r\n\r\nThis __waDropzone__ widget has 11 Events:\r\n\r\n* __On File Added__: called whenever a file is added to the widget.\r\n\r\n* __On File Removed__: Called whenever a file is removed from the list. You can listen to this and delete the file from your server if you want to.\r\n\r\n* __On Error__: An error occured. Receives the errorMessage as second parameter and if the error was due to the XMLHttpRequest the xhr object as third.\r\n\r\n* __On Processing__: When a file gets processed (since there is a queue not all files are processed immediately).\r\n* __On Upload Progress__: Gets called periodically whenever the file upload progress changes.\r\nGets the progress parameter as second parameter which is a percentage (0-100) and the bytesSent parameter as third which is the number of the bytes that have been sent to the server.\r\n* __On Sending__: Called just before each file is sent. Gets the xhr object and the formData objects as second and third parameters, so you can modify them (for example to add a CSRF token) or add additional data.\r\n* __On Processing__: When a file gets processed (since there is a queue not all files are processed immediately).\r\n* __On Success__: The file has been uploaded successfully. Gets the server response as second argument.\r\n* __On Complete__: Called when the upload was either successful or erroneous.\r\n* __On Cancel__: Called when a file upload gets canceled.\r\n* __On Max Files Reached__: Called when the number of files accepted reached the maxFiles limit.\r\n* __On Max Files Exceeded__: Called for each file that has been rejected because the number of files exceeds the maxFiles limit.\r\n\r\n### Methods\r\n\r\n* __getAcceptedFiles__: List of files accepted.\r\n* __getRejectedFiles__: List of files rejected by the widget (due to size, file type etc).\r\n* __getRejectedFiles__: List of files rejected by the widget (due to size, file type etc).\r\n* __getQueuedFiles__: List of files in the Queue.\r\n* __getUploadingFiles__: List the files currently in the upload process.\r\n* __disable__: Disable the widget.\r\n* __enable__: Enable the widget.\r\n* __addFile(file)__: Add file to the widget, it accept one parameter File Object __file__ (http://www.w3.org/TR/FileAPI/#dfn-file).\r\n* __enqueueFiles(files)__: enqueue multiple files to the Queue, it accept an array of file objects. \r\n* __enqueueFile(file)__: enqueue single file to the Queue, it accept an file object as parameter. \r\n* __removeFile(file)__: remove file from the widget. \r\n* __removeAllFiles(cancelIfNecessary)__: remove all files from the widget, pass a boolean to cancel the uploading files as well. \r\n* __removeAllFiles(cancelIfNecessary)__: remove all files from the widget, pass a boolean to cancel the uploading files as well. \r\n* __processQueue()__: start processing files in the Queue. \r\n* __processFiles(files)__: process the specified files. \r\n* __cancelUpload(file)__: cancel the upload for the specified file.\r\n* __uploadFiles(files)__: Start uploading the specified files.\r\n\r\n### Goals\r\nThe __waDropzone__ is an alternative to upload multiple files to Wakanda Server, it's easy to use just Drag & Drop the widget to your page and you're up & running.\r\n\r\n### More Information\r\nFor more information on how to install a custom widget, refer to [Installing a Custom Widget](http://doc.wakanda.org/WakandaStudio0/help/Title/en/page3869.html#1027761).\r\n\r\nFor more information about Custom Widgets, refer to [Custom Widgets](http://doc.wakanda.org/Wakanda0.v5/help/Title/en/page3863.html \"Custom Widgets\") in the [Architecture of Wakanda Applications](http://doc.wakanda.org/Wakanda0.v5/help/Title/en/page3844.html \"Architecture of Wakanda Applications\") manual.\r\n","google":"UA-37960720-4","note":"Don't delete this file! It's used internally to help with page regeneration."}